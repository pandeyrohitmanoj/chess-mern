{"version":3,"file":"static/js/185.652d2c58.chunk.js","mappings":"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","sources":["Components/firstScreen/Navigation.js","Components/firstScreen/UpperText.js","Components/firstScreen/DatePicker.js","Components/firstScreen/InformationBox.js","Components/firstScreen/FirstScreen.js"],"sourcesContent":["import { Link } from 'react-router-dom'\r\nimport {useContext} from 'react'\r\nimport {RxHamburgerMenu} from  'react-icons/rx'\r\nimport { findFlagUrlByCountryName } from \"country-flags-svg\";\r\n\r\nimport '../../Styles/navigation.css'\r\n\r\nimport {CityNameContext} from '../../App'\r\n\r\nfunction Navigation(props) {\r\n    const {sideBarToggle,selectedCountryName,userName,} = useContext(CityNameContext)\r\n    const flagUrl = findFlagUrlByCountryName(selectedCountryName);\r\n\r\n    return(\r\n        <nav >\r\n            <ul className='upperNavbar'>\r\n                <li><div onClick={sideBarToggle} ><RxHamburgerMenu className=\"hamburgerIcon\"  /></div></li>\r\n                <li><Link><div className='logoIcon'></div></Link></li>\r\n                <li><Link>{userName}</Link></li>\r\n                <li><img src={flagUrl} alt='country-flag' className='upperNavbar-countryFlag-image' style={{display: selectedCountryName==\"\" ? 'none' : '' }} /></li>\r\n                <li> {selectedCountryName}</li>\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navigation\r\n","import React from 'react'\r\n\r\nimport '../../Styles/upperText.css'\r\n\r\nexport default function UpperText() {\r\n  return (\r\n    <div className='upperTextbox'>\r\n        <div className='upperTitle'>The perfect car for your next trip is just<br/> around the corner<br/></div>\r\n        <div className='lowerTitle'>Book your drive now!</div>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState,useContext } from 'react';\r\nimport Calendar from 'react-calendar';\r\n\r\nimport {CityNameContext} from '../../App'\r\n\r\nimport './datePicker.css'\r\nimport 'react-calendar/dist/Calendar.css';\r\n\r\nconst DateRangePicker = () => {\r\n  const {\r\n    fromDate,\r\n    setFromDate,\r\n    toDate,\r\n    setToDate,\r\n  } = useContext(CityNameContext)\r\n  const [startDate, setStartDate] = useState(fromDate);\r\n  const [endDate, setEndDate] = useState(toDate);\r\n  const [showCalendar, setShowCalendar] = useState(false);\r\n\r\n  const handleStartDateChange = (date) => {\r\n    if (date >= new Date()) {\r\n      setFromDate(date);\r\n    }\r\n  };\r\n\r\n  const handleEndDateChange = (date) => {\r\n    if (date >= new Date()) {\r\n      setToDate(date);\r\n    }\r\n  };\r\n\r\n  const handleCalendarToggle = () => {\r\n    setShowCalendar(!showCalendar);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setShowCalendar(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <input\r\n        className='input'\r\n        type=\"text\"\r\n        value={`${fromDate.toLocaleDateString()} - ${toDate.toLocaleDateString()}`}\r\n        onClick={handleCalendarToggle}\r\n        readOnly\r\n      />\r\n      {showCalendar && (\r\n        <div className='calendar-box'>\r\n          <Calendar\r\n            onChange={handleStartDateChange}\r\n            value={fromDate}\r\n            minDate={new Date()}\r\n          />\r\n          <Calendar\r\n            onChange={handleEndDateChange}\r\n            value={toDate}\r\n            minDate={new Date()}\r\n          />\r\n          <button onClick={handleCancel}>Back</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DateRangePicker;","import React, { useState,useContext, useEffect } from 'react'\r\nimport DateRangePicker from './DatePicker';\r\n\r\n\r\nimport { CityNameContext,} from '../../App'\r\n\r\nimport '../../Styles/InformationBox.css'\r\n\r\nconst InformationBox = () => {\r\n  const {\r\n    selectedCity,\r\n    setSelectedCity,\r\n    addressState,    \r\n    setAddressState,\r\n    selectedCountryName,\r\n    setGetDataTrigger\r\n  } = useContext(CityNameContext)\r\n\r\n  const [ cityElementVisibilty, setCityElementVisibilty ] = useState('none')\r\n\r\n  \r\n\r\n\r\n  const addressStyle = {\r\n    display: cityElementVisibilty\r\n  }\r\n\r\n  const handleClick = ( ) => {\r\n    if( cityElementVisibilty == \"\"){\r\n      setCityElementVisibilty('none')\r\n      return\r\n    }\r\n    setCityElementVisibilty('')\r\n  }\r\n  const scrollDown = () => {\r\n    document.getElementsByClassName('scroll-content')[0].scrollTo('0',window.innerHeight)\r\n  }\r\n\r\n  return (\r\n    <div className='lower-box'>\r\n    <div className='infoBox'>        \r\n        <div className='infoBox-address-box' onClick={handleClick} >\r\n          { selectedCity==\"\" ? \"Select a city\" : selectedCity }\r\n        </div>\r\n        <DateRangePicker className='startToEndDate'/>\r\n        <div className='button' onClick={scrollDown} >Get Car</div>   \r\n    </div>\r\n    <div className='infoBox-address-box-allCity' style={addressStyle}  >\r\n      { addressState.map( (state, key) => {\r\n        return (\r\n          <div className='infoBox-address-box-allCity-cities' onClick={ () => { setSelectedCity(state);setCityElementVisibilty('none');setGetDataTrigger(previousState => !previousState); }} key={key} >{state}</div>              \r\n          )\r\n      } )}\r\n  </div>\r\n  </div>\r\n  )\r\n}\r\n\r\n\r\nexport default InformationBox\r\n//{\"countryName\":\"India\",\"cityNames\":[\"Delhi\",\"Mumbai\",\"Ahmedabad\",\"Kolkata\",\"Chennai\",\"Bengaluru\",\"Jaipur\",\"Pune\",\"Surat\",\"Hyderabad\",\"Lucknow\"]}","import Navigation from \"./Navigation\"\r\nimport UpperText from './UpperText'\r\nimport InformationBox from './InformationBox'\r\n\r\nimport '../../Styles/firstScreen.css'\r\n\r\n\r\n\r\nconst FirstScreen = () => {   \r\n    \r\n    const cityName ='mumbai'\r\n    const profileName = 'Rohit'\r\n    const profilePhoto = 'Initiate photo here'\r\n    \r\n    return (        \r\n        <div className=\"upperComponent\" >            \r\n            <Navigation cityname={cityName} profileName={profileName} profilePhoto = {profilePhoto} />\r\n            <UpperText />\r\n            <InformationBox />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FirstScreen\r\n\r\n\r\n/* fetch citName and full person name and maybe photo of the profile for navbar\r\n\r\n\r\n\r\n*/"],"names":["props","_useContext","useContext","CityNameContext","sideBarToggle","selectedCountryName","userName","flagUrl","findFlagUrlByCountryName","_jsx","children","_jsxs","className","onClick","RxHamburgerMenu","Link","src","alt","style","display","UpperText","fromDate","setFromDate","toDate","setToDate","_useState","useState","_useState2","_slicedToArray","_useState3","_useState4","_useState5","_useState6","showCalendar","setShowCalendar","type","value","concat","toLocaleDateString","readOnly","Calendar","onChange","date","Date","minDate","selectedCity","setSelectedCity","addressState","setGetDataTrigger","setAddressState","cityElementVisibilty","setCityElementVisibilty","addressStyle","DateRangePicker","document","getElementsByClassName","scrollTo","window","innerHeight","map","state","key","previousState","Navigation","cityname","profileName","profilePhoto","InformationBox"],"sourceRoot":""}